---
- name: Setup a Workshop for RHEL Image Mode
  hosts: localhost
  become: yes
  gather_facts: yes
  connection: local
  vars:
    HOSTNAME: "build"
    DOMAINNAME: "example.com"
    USERNAME: "lab-user"
    USERPASSWORD: "redhat"
    SERVERNAME: "server"
    REGISTRYNAME: "registry"

  tasks:

  - name: Set the hostname
    ansible.builtin.hostname:
      name: "{{ HOSTNAME }}.{{ DOMAINNAME }}"

  - name: Add {{ HOSTNAME }} {{ HOSTNAME }}.{{ DOMAINNAME }} to /etc/hosts
    ansible.builtin.lineinfile:
      path: /etc/hosts
      regexp: '^127\.0\.0\.1'
      line: "127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 {{ HOSTNAME }} {{ HOSTNAME }}.{{ DOMAINNAME }}"
      owner: root
      group: root
      mode: 0644

  - name: Add dns entries to /etc/hosts
    ansible.builtin.lineinfile:
      path: /etc/hosts
      line: "{{HOST_ENTRIES}}"  
    vars:
      HOST_ENTRIES:
      - "192.168.122.101 {{ SERVERNAME }} {{ SERVERNAME }}.{{ DOMAINNAME }}"
      - "192.168.122.1 {{ REGISTRYNAME }} {{ REGISTRYNAME }}.{{ DOMAINNAME }}"

  - name: Set the users password
    ansible.builtin.shell:
      cmd: usermod -p $(openssl passwd -1 {{USERPASSWORD}}) {{USERNAME}}
     
  - name: Install packages
    ansible.builtin.yum:
      name: "{{ rpm_packages }}"
    vars:
      rpm_packages:
      - "@Virtualization Host"
      - virt-manager
      - virt-install
      - cockpit-machines
      - httpd

  - name: Enable Linger
    ansible.builtin.shell:
      cmd: loginctl enable-linger {{USERNAME}}

  - name: Add user to libvirtd
    ansible.builtin.shell:
      cmd: usermod -aG libvirt {{USERNAME}}

  - name: Enable and start libvirt
    ansible.builtin.systemd_service:
      name: libvirtd
      enabled: true
      state: started

  - name: Enable and start cockpit
    ansible.builtin.systemd_service:
      name: cockpit.socket
      enabled: true
      state: started

  - name: Enable and start dnsmasq
    ansible.builtin.systemd_service:
      name: dnsmasq
      enabled: true
      state: started

  - name: Enable and start httpd
    ansible.builtin.systemd_service:
      name: httpd
      enabled: true
      state: started

  - name: Set necessary permissions for newgidmap
    ansible.builtin.file:
      path: /usr/bin/newgidmap
      mode: '4755'

  - name: Set necessary permissions for newuidmap
    ansible.builtin.file:
      path: /usr/bin/newuidmap
      mode: '4755'

  - name: Create a mount point for the ISO
    ansible.builtin.file:
      path: /var/www/html/RHEL
      state: directory

  - name: Mount the ISO using builtin.shell so we don't have to load ansible.posix.mount
    ansible.builtin.shell:
      cmd: mount -o loop /mnt/iso/rhel-9.4-x86_64-dvd.iso /var/www/html/RHEL

  - name: Create kickstart file
    ansible.builtin.file:
      src: imagemode.cfg
      dest: /var/www/html/imagemode.cfg

  - name: Create the root CA for example.com
    ansible.builtin.file:
      src: ca.example.com.crt
      dest: /var/www/html/ca.example.com.crt